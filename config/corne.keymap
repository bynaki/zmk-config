// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold and Tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };

        td_bspc: td_bspc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BSPC";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&lt 1 BSPC>, <&kp BSPC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
  &kp Q        &kp W       &kp E        &kp R         &kp T              &kp Y      &kp U       &kp I        &kp O       &kp P
  &ht LSHFT A  &ht LALT S  &ht LCTRL D  &ht LGUI F    &kp G              &kp H      &ht LGUI J  &ht LCTRL K  &ht LALT L  &ht RSHFT SQT
  &kp Z        &kp X       &kp C        &kp V         &kp B              &kp N      &kp M       &kp COMMA    &kp DOT     &kp FSLH
                           &kp GLOBE    &lt 2 ESCAPE  &mt RCTRL ENTER    &kp SPACE  &lt 1 BSPC  &kp GLOBE
            >;
        };

        Right {
            bindings = <
  &kp EXCL          &kp AT          &kp HASH        &kp PLUS        &kp LPAR     &kp HOME  &kp PG_DN      &kp PG_UP     &kp END         &kp GRAVE
  &ht LSHIFT CARET  &ht LALT PRCNT  &ht LCTRL DLLR  &ht LGUI EQUAL  &kp LBRC     &kp LEFT  &ht LGUI DOWN  &ht LCTRL UP  &ht LALT RIGHT  &ht RSHFT SEMI
  &kp BSLH          &kp PIPE        &kp AMPS        &kp MINUS       &kp LBKT     &kp BSPC  &kp UNDER      &trans        &trans          &kp UNDER
                                    &trans          &trans          &kp ENTER    &trans    &trans         &trans
            >;
        };

        Left {
            bindings = <
  &kp DEL         &kp F7       &kp F8        &kp F9       &trans     &kp RPAR  &kp N7       &kp N8        &kp N9       &kp ASTRK
  &ht LSHIFT TAB  &ht LALT F4  &ht LCTRL F5  &ht LGUI F6  &kp INS    &kp RBRC  &ht LGUI N4  &ht LCTRL N5  &ht LALT N6  &ht RSHIFT COLON
  &caps_word      &kp F1       &kp F2        &kp F3       &kp F10    &kp RBKT  &kp N1       &kp N2        &kp N3       &kp TILDE
                               &trans        &trans       &trans     &trans    &lt 1 N0     &trans
            >;
        };

        Function {
            bindings = <
  &sys_reset    &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &sys_reset
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
  &bootloader   &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &bootloader
                              &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        func_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
